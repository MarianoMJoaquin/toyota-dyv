---
const API_URL = 'https://panelweb.derkayvargas.com/api/entradas/';  // URL de la API

// Llamar a la API para obtener las noticias
async function fetchNoticias() {
  const response = await fetch(API_URL);
  const data = await response.json();
  return data;
}

// Simulación de categorías (puedes reemplazar esto por un endpoint real si lo tienes)
const categorias = [
  { id: 1, name: 'Tecnología' },
  { id: 2, name: 'Salud' },
  { id: 3, name: 'RSE' }
];

// Llamamos a la API para obtener las noticias en el servidor
const noticiasData = await fetchNoticias();
const noticias = noticiasData.data || [];
---

<script>
  // Variables manejadas en el cliente (frontend)
  let busqueda = '';
  let filtroCategoria = '';
  let noticiasFiltradas = Astro.props.noticias;
  let noticiasPaginadas = noticiasFiltradas.slice(0, 6);  // Mostramos 6 por página

  // Función para hacer la búsqueda y filtrado
  function filtrarNoticias() {
    const palabrasClave = busqueda.toLowerCase().split(' ').filter(Boolean);

    // Filtramos las noticias por búsqueda y categoría
    noticiasFiltradas = [...Astro.props.noticias].filter(noticia => {
      const titulo = noticia.titulo.toLowerCase();
      const coincideBusqueda = palabrasClave.every(palabra => titulo.includes(palabra));
      const coincideCategoria = filtroCategoria
        ? noticia.categories.some(category => category.name === filtroCategoria)
        : true;
      
      return coincideBusqueda && coincideCategoria;
    });

    // Actualizamos las noticias paginadas (6 por página)
    noticiasPaginadas = noticiasFiltradas.slice(0, 6);
    updateView();
  }

  // Función para forzar la actualización del DOM
  function updateView() {
    const list = document.querySelector('#noticias-grid');
    list.innerHTML = noticiasPaginadas.map(noticia => `
      <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <img src="${noticia.imageUrl}" alt="${noticia.titulo}" class="w-full h-48 object-cover" />
        <div class="p-4">
          <h2 class="text-xl font-semibold mb-2">${noticia.titulo}</h2>
          <p class="text-gray-600 mb-4">${noticia.contenido.substring(0, 100)}...</p>
          <div class="mb-4">
            ${noticia.categories.map(category => `
              <span class="inline-block bg-gray-200 text-gray-800 text-xs font-semibold rounded px-2 py-1 mr-2">
                ${category.name}
              </span>
            `).join('')}
          </div>
          <a href="${noticia.postUrl}" class="text-blue-500 hover:text-blue-600 font-medium">Leer más</a>
        </div>
      </div>
    `).join('');
  }

  // Filtrar las noticias cuando se carga el componente por primera vez
  filtrarNoticias();
</script>

<section class="container mx-auto p-4">
  <!-- Buscador -->
  <div class="mb-4">
    <input
      type="text"
      class="border border-gray-300 rounded p-2 w-full"
      placeholder="Buscar noticias..."
      onInput={(event) => { busqueda = event.target.value; filtrarNoticias(); }}
    />
  </div>

  <!-- Filtros de Categorías -->
  <div class="mb-4">
    <select
      class="border border-gray-300 rounded p-2"
      onChange={(event) => { filtroCategoria = event.target.value; filtrarNoticias(); }}
    >
      <option value="">Todas las Categorías</option>
      {Astro.props.categorias.map(categoria => (
        <option value={categoria.name}>{categoria.name}</option>
      ))}
    </select>
  </div>

  <!-- Grid de Noticias -->
  <div id="noticias-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
</section>
