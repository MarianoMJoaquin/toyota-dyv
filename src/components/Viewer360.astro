---
import type { Viewer360Props } from '../types/viewer';

const {
  initialVersion = 'xli',
  initialColor = 'red',
  initialSubversion = 'mt',
  imagePath = 'corolla'
} = Astro.props as Viewer360Props;
---

<div class="flex bg-white p-5 rounded-lg flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-8 w-full max-w-4xl">
  <!-- Left Column -->
  <div class="flex flex-col items-center space-y-4 w-full md:w-2/3">
    <div class="flex justify-center md:justify-start space-x-2 md:space-x-4 mb-4">
      <button class="px-4 py-2 rounded-md font-semibold transition-colors duration-200 version-tab bg-gray-300 hover:bg-gray-400 text-gray-700 active-tab" data-version="xli">XLI</button>
      <button class="px-4 py-2 rounded-md font-semibold transition-colors duration-200 version-tab bg-gray-300 hover:bg-gray-400 text-gray-700" data-version="xei">XEI</button>
      <button class="px-4 py-2 rounded-md font-semibold transition-colors duration-200 version-tab bg-gray-300 hover:bg-gray-400 text-gray-700" data-version="seg">SEG</button>
    </div>

    <div 
      id="viewer" 
      class="viewer-container w-full md:bg-[length:3000%] h-[200px] md:h-[316px] overflow-hidden cursor-grab bg-cover bg-no-repeat" 
      data-initial-version={initialVersion}
      data-initial-color={initialColor}
      data-initial-subversion={initialSubversion}
      data-image-path={imagePath}
    >
    </div>

    <div class="flex justify-center space-x-4 font-semibold italic">
      <p>&lt;</p>
      <p>Arrastra para girar</p>
      <p>&gt;</p>
    </div>

    <div class="flex justify-center space-x-2 md:space-x-4">
      <button class="w-8 h-8 md:w-10 md:h-10 rounded-full border-2 border-gray-300 bg-red-500 hover:scale-110 transition-transform duration-200 color-button" data-color="red"></button>
      <button class="w-8 h-8 md:w-10 md:h-10 rounded-full border-2 border-gray-300 bg-blue-500 hover:scale-110 transition-transform duration-200 color-button" data-color="blue"></button>
      <button class="w-8 h-8 md:w-10 md:h-10 rounded-full border-2 border-gray-300 bg-white hover:scale-110 transition-transform duration-200 color-button" data-color="white"></button>
    </div>
  </div>

  <!-- Right Column -->
  <div class="flex flex-col space-y-4 w-full md:w-1/3">
    <div class="flex justify-center space-x-2">
      <button class="px-4 py-2 rounded-md font-semibold transition-colors duration-200 subversion-tab bg-gray-300 hover:bg-gray-400 text-gray-700 hidden" data-subversion="mt">MT</button>
      <button class="px-4 py-2 rounded-md font-semibold transition-colors duration-200 subversion-tab bg-gray-300 hover:bg-gray-400 text-gray-700 hidden" data-subversion="at">AT</button>
      <button class="px-4 py-2 rounded-md font-semibold transition-colors duration-200 subversion-tab bg-gray-300 hover:bg-gray-400 text-gray-700 hidden" data-subversion="gr">GR</button>
    </div>

    <div class="bg-white p-4 rounded-lg shadow-md">
      <h2 class="text-lg md:text-xl font-semibold mb-2">Descripción de la Subversión</h2>
      <ul class="list-disc pl-5 text-sm md:text-base" id="descriptionList"></ul>
    </div>
  </div>
</div>

<script>
  class Viewer360Controller {
    private readonly totalFrames = 30;
    private currentFrame = 0;
    private isDragging = false;
    private startX = 0;
    private readonly frameWidthPercentage: number;
    private readonly viewer: HTMLElement;
    private currentColor: string;
    private currentVersion: string;
    private currentSubversion: string;
    private readonly imagePath: string;

    private readonly subversionDescriptions = {
      mt: ["Transmisión manual", "5 velocidades", "Tracción delantera"],
      at: ["Transmisión automática", "6 velocidades", "Tracción delantera"],
      gr: ["Transmisión GR", "6 velocidades deportivas", "Tracción trasera", "Edición deportiva"]
    };

    constructor() {
      const viewer = document.getElementById('viewer');
      if (!viewer) throw new Error('Viewer element not found');
      
      this.viewer = viewer;
      this.frameWidthPercentage = 100 / this.totalFrames;
      this.currentColor = viewer.dataset.initialColor || 'red';
      this.currentVersion = viewer.dataset.initialVersion || 'xli';
      this.currentSubversion = viewer.dataset.initialSubversion || 'mt';
      this.imagePath = viewer.dataset.imagePath || 'corolla';

      this.initialize();
    }

    private initialize(): void {
      this.setupEventListeners();
      this.updateSprite();
      this.updateSubversionTabs(this.currentVersion);
      this.updateDescription(this.currentSubversion);
    }

    private updateSprite(): void {
      this.viewer.style.backgroundImage = `url('${this.imagePath}/corolla-${this.currentVersion}-${this.currentColor}.png')`;
      this.viewer.style.backgroundSize = "3000%";
      this.currentFrame = 0;
      this.viewer.style.backgroundPosition = "0 0";
    }

    // ... Rest of the methods implementation with proper TypeScript types
    
    private setupEventListeners(): void {
      // Mouse events
      this.viewer.addEventListener('mousedown', this.handleDragStart.bind(this));
      this.viewer.addEventListener('mousemove', this.handleDragMove.bind(this));
      this.viewer.addEventListener('mouseup', this.handleDragEnd.bind(this));
      this.viewer.addEventListener('mouseleave', this.handleDragEnd.bind(this));

      // Touch events
      this.viewer.addEventListener('touchstart', this.handleTouchStart.bind(this));
      this.viewer.addEventListener('touchmove', this.handleTouchMove.bind(this));
      this.viewer.addEventListener('touchend', this.handleDragEnd.bind(this));

      // Button events
      document.querySelectorAll('.color-button').forEach(button => {
        button.addEventListener('click', (e) => {
          const target = e.currentTarget as HTMLButtonElement;
          this.changeColor(target.dataset.color as string);
        });
      });

      // ... Add other event listeners
    }
  }

  // Initialize the viewer controller
  document.addEventListener('DOMContentLoaded', () => {
    new Viewer360Controller();
  });
</script>

<style>
  .active-tab {
    @apply bg-gray-700 text-white;
  }
</style>