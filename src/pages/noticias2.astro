---
import Layout from "../layouts/Layout.astro";

const API_URL = 'https://panelweb.derkayvargas.com/api/entradas/';  // URL de la API

// Parámetros de la URL para el buscador, paginación y filtros
let paginaActual = parseInt(Astro.url.searchParams.get('page') || '1');
let busqueda = Astro.url.searchParams.get('search') || '';
let filtroCategoria = Astro.url.searchParams.get('category') || '';

// Número de noticias a mostrar por página
const noticiasPorPagina = 6;  // Aumentamos el número para el grid

// Función para obtener noticias desde la API
async function fetchNoticias() {
  const url = new URL(API_URL);

  const response = await fetch(url.toString());
  const data = await response.json();
  return data;
}

// Simulación de categorías
const categorias = [
  { id: 1, name: 'Novedades' },
  { id: 2, name: 'Club Toyota' },
  { id: 3, name: 'RSE' },
  { id: 4, name: 'Servicios y Accesorios' },
  { id: 5, name: 'ESG Ambiental' },
  { id: 6, name: 'ESG Gobernanza' },
  { id: 7, name: 'ESG Social' }
];

// Definición de la interfaz de una noticia
interface Noticia {
    id: number;
    titulo: string;
    contenido: string;
    imageUrl: string;
    postUrl: string;
    categories: { id: number; name: string }[];
  }

// Llamar a la API para obtener noticias
const noticiasData = await fetchNoticias();
const noticias = noticiasData.data || [];

// Filtrar por búsqueda y categoría en el frontend
let noticiasFiltradas = noticias;

// Filtro por búsqueda
if (busqueda) {
  // Dividimos la búsqueda en palabras clave
  const palabrasClave = busqueda.toLowerCase().split(' ').filter(Boolean);

  noticiasFiltradas = noticiasFiltradas.filter((noticia: Noticia) => {
    const titulo = noticia.titulo.toLowerCase();

    // Verificamos si todas las palabras clave están presentes en el título
    return palabrasClave.every(palabra => titulo.includes(palabra));
  });
}

// Filtro por categoría
if (filtroCategoria) {
  noticiasFiltradas = noticiasFiltradas.filter((noticia: Noticia) =>
    noticia.categories.some(category => category.name === filtroCategoria)
  );
}

// Paginación
const totalNoticias = noticiasFiltradas.length;
const totalPaginas = Math.ceil(totalNoticias / noticiasPorPagina);

// Noticias paginadas
const noticiasPaginadas = noticiasFiltradas.slice(
  (paginaActual - 1) * noticiasPorPagina,
  paginaActual * noticiasPorPagina
);
---
<Layout title="Noticias | Derka y Vargas">
<!-- Plantilla de la página -->
<main class="main">
  <section class="section container mx-auto">
    <h1 class="vehicles__title heading-1">Novedades</h1>
    <!-- Buscador -->
    <div class="mb-4">
      <form method="GET" action="/noticias2">
        <input
          type="text"
          name="search"
          class="border border-gray-300 rounded p-2 w-full"
          placeholder="Buscar noticias..."
          value={busqueda}
        />
        <button type="submit" class="bg-blue-500 text-white p-2 rounded mt-2">Buscar</button>
      </form>
    </div>
  
    <!-- Filtros de Categorías -->
    <div class="mb-4">
      <form method="GET" action="/noticias2">
        <select name="category" class="border border-gray-300 rounded p-2">
          <option value="">Todas las Categorías</option>
          {categorias.map(categoria => (
            <option value={categoria.name} selected={categoria.name === filtroCategoria}>
              {categoria.name}
            </option>
          ))}
        </select>
        <button type="submit" class="bg-blue-500 text-white p-2 rounded mt-2">Filtrar</button>
      </form>
    </div>
  
    <!-- Mostrar mensaje si no se encontraron noticias -->
    {noticiasPaginadas.length === 0 ? (
      <div class="text-center w-full h-96 max-w-full text-gray-500">
        <h2 class="text-xl font-semibold mb-4">No se encontraron noticias</h2>
        <p>Intenta realizar una nueva búsqueda o aplicar otros filtros.</p>
      </div>
    ) : (
      <!-- Grid de Noticias -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {noticiasPaginadas.map((noticia: Noticia) => (
          <div class="bg-white rounded-lg shadow-md overflow-hidden" key={noticia.id}>
            <!-- Imagen de portada -->
            <img src={noticia.imageUrl} alt={noticia.titulo} class="w-full h-48 object-cover" />
  
            <!-- Contenido de la tarjeta -->
            <div class="p-4">
              <!-- Título de la noticia -->
              <h2 class="text-xl font-semibold mb-2">{noticia.titulo}</h2>
  
              <!-- Descripción -->
              <p class="text-gray-600 mb-4">{noticia.contenido.substring(0, 100)}...</p>
  
              <!-- Categorías -->
              <div class="mb-4">
                {noticia.categories.map(category => (
                  <span class="inline-block bg-gray-200 text-gray-800 text-xs font-semibold rounded px-2 py-1 mr-2" key={category.id}>
                    {category.name}
                  </span>
                ))}
              </div>
  
              <!-- Link para leer más -->
              <a href={noticia.postUrl} class="text-blue-500 hover:text-blue-600 font-medium">Leer más</a>
            </div>
          </div>
        ))}
      </div>
    )}
  
    <!-- Paginación -->
    {noticiasPaginadas.length > 0 && (
      <div class="mt-8 flex justify-center gap-2">
        {paginaActual > 1 && (
          <a href={`/noticias2?page=${paginaActual - 1}&search=${busqueda}&category=${filtroCategoria}`}
            class="bg-gray-200 hover:bg-gray-300 text-gray-800 p-2 rounded"
          >
            Anterior
          </a>
        )}
  
        {paginaActual < totalPaginas && (
          <a href={`/noticias2?page=${paginaActual + 1}&search=${busqueda}&category=${filtroCategoria}`}
            class="bg-gray-200 hover:bg-gray-300 text-gray-800 p-2 rounded"
          >
            Siguiente
          </a>
        )}
      </div>
    )}
  </section>
</main>
</Layout>